
@{
    ViewData["Title"] = Serenity.LocalText.Get("Db.Northwind.Scales.EntitySingular");
}
@section Head {
    <script src="~/Scripts/flot/jquery.flot.js"></script>
    <script src="~/Scripts/adminlte/demo.js"></script>
    
    
    <!--Reference the SignalR library. -->
    <script src="http://ajax.aspnetcdn.com/ajax/signalr/jquery.signalr-2.2.2.min.js"></script>

    <!--Reference the autogenerated SignalR hub script. -->
    <script src="http://localhost:8089/signalr/hubs"></script>
    <!--Add script to update the page and send messages.-->
}
<div class="row">
    <div class="col-xs-12">
        <!-- interactive chart -->
        <div class="box box-primary">
            <div class="box-header with-border">
                <i class="fa fa-bar-chart-o"></i>
                <h3 class="box-title">Моментно състояние на кантара в реално време</h3>
                <div class="box-tools pull-right">
                    Реално време
                    <div class="btn-group" id="realtime" data-toggle="btn-toggle">
                        <button type="button" class="btn btn-default btn-xs active" data-toggle="on">On</button>
                        <button type="button" class="btn btn-default btn-xs" data-toggle="off">Off</button>
                    </div>
                </div>
            </div>
            <div class="box-body">
                <div id="interactive" style="height: 300px;"></div>
            </div><!-- /.box-body-->
        </div><!-- /.box -->
    </div><!-- /.col -->
</div><!-- /.row -->

<div id="GridDiv" data-scaleid="@ViewBag.Scale"></div>

<script type="text/javascript">
    jQuery(function () {
        new FruitCorrect.Northwind.SavedScaleMasurementGrid($('#GridDiv'),{}).init();

        Q.initFullHeightGridPage($('#GridDiv'));
    });


    $(function() {
        /*
         * Flot Interactive Chart
         * -----------------------
         */
        // We use an inline data source in the example, usually data would
        // be fetched from a server
        var data = [], totalPoints = 100;

        function getRandomData() {

            if (data.length > 0)
                data = data.slice(1);

            // Do a random walk
            while (data.length < totalPoints) {

                var prev = data.length > 0 ? data[data.length - 1] : 50,
                    y = prev + Math.random() * 10 - 5;

                if (y < 0) {
                    y = 0;
                } else if (y > 100) {
                    y = 100;
                }

                data.push(y);
            }

            // Zip the generated y values with the x values
            var res = [];
            for (var i = 0; i < data.length; ++i) {
                res.push([i, data[i]]);
            }

            return res;
        }

        var interactive_plot = $.plot("#interactive",
            [getRandomData()],
            {
                grid: {
                    borderColor: "#f3f3f3",
                    borderWidth: 1,
                    tickColor: "#f3f3f3"
                },
                series: {
                    shadowSize: 0, // Drawing is faster without shadows
                    color: "#3c8dbc"
                },
                lines: {
                    fill: true, //Converts the line chart to area chart
                    color: "#3c8dbc"
                },
                yaxis: {
                    min: 0,
                    max: 100,
                    show: true
                },
                xaxis: {
                    show: true
                }
            });

        var updateInterval = 500; //Fetch data ever x milliseconds
        var realtime = "on"; //If == to on then fetch data every x seconds. else stop fetching

        function update() {

            interactive_plot.setData([getRandomData()]);

            // Since the axes don't change, we don't need to call plot.setupGrid()
            interactive_plot.draw();
            if (realtime === "on")
                setTimeout(update, updateInterval);
        }

        //INITIALIZE REALTIME DATA FETCHING
        if (realtime === "on") {
            update();
        }
        //REALTIME TOGGLE
        $("#realtime .btn").click(function() {
            if ($(this).data("toggle") === "on") {
                realtime = "on";
            } else {
                realtime = "off";
            }
            update();
        });

    });
</script>